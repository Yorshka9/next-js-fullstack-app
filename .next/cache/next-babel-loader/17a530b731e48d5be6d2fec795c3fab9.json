{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\NextJS\\\\next-blog\\\\pages\\\\[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n/* layout */\n\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n/* components */\n\nimport BlogPost from '../components/modules/BlogPost';\nimport Navbar from '../components/NavBar/NavBar';\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst Page = ({\n  data\n}) => {\n  const {\n    content\n  } = data; // Defining blogContentData as Content component in storyblok\n\n  const blogContentData = content.components.find(item => item.component === 'Content');\n  console.log(blogContentData); // Map out the group component inside Content and return every component inside from top to bottom\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), blogContentData.Group.map(data => {\n    return __jsx(BlogPost, {\n      img: data.Image,\n      title: data.Title,\n      body: data.Text,\n      intro: data.Intro,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }));\n};\n\nPage.getInitialProps = async ({\n  query\n}) => {\n  const {\n    page\n  } = query;\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  return {\n    data\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["D:/Code/NextJS/next-blog/pages/[page].js"],"names":["fetch","DefaultLayout","BlogPost","Navbar","fetchUrl","url","then","r","json","Page","data","content","blogContentData","components","find","item","component","console","log","Group","map","Image","Title","Text","Intro","getInitialProps","query","page"],"mappings":";;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA;;AAEA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAGD,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,IAApB,CADyB,CAGzB;;AAEA,QAAME,eAAe,GAAGD,OAAO,CAACE,UAAR,CAAmBC,IAAnB,CAAyBC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,SAArD,CAAxB;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ,EAN0B,CAQzB;;AAEA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGA,eAAe,CAACO,KAAhB,CAAsBC,GAAtB,CAA0BV,IAAI,IAAI;AACnC,WAAQ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACW,KAApB;AAA2B,MAAA,KAAK,EAAEX,IAAI,CAACY,KAAvC;AAA+C,MAAA,IAAI,EAAEZ,IAAI,CAACa,IAA1D;AAAgE,MAAA,KAAK,EAAEb,IAAI,CAACc,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACC,GAFA,CAHH,CADF;AASD,CAnBD;;AAsBAf,IAAI,CAACgB,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAMhB,IAAI,GAAG,MAAMN,QAAQ,CAAE,kCAAiCuB,IAAK,EAAxC,CAA3B;AACA,SAAO;AAAEjB,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeD,IAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n\n/* components */\n\nimport BlogPost from '../components/modules/BlogPost';\nimport Navbar from '../components/NavBar/NavBar';\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n\nconst Page = ({ data }) => {\n  const { content } = data;\n\n  // Defining blogContentData as Content component in storyblok\n\n  const blogContentData = content.components.find((item) => item.component === 'Content');\n\tconsole.log(blogContentData);\n\n  // Map out the group component inside Content and return every component inside from top to bottom\n\n  return (\n    <DefaultLayout>\n      <Navbar/>\n\n      {blogContentData.Group.map(data => {\n      return  <BlogPost img={data.Image} title={data.Title}  body={data.Text} intro={data.Intro} />\n      })}         \n    </DefaultLayout>\n  );\n};\n\n\nPage.getInitialProps = async ({ query }) => {\n  const { page } = query;\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  return { data }; \n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}