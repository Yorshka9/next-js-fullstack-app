{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\Code\\\\NextJS\\\\react-storyblok-next-boilerplate-master\\\\pages\\\\root\\\\[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n/* layout */\n\nimport DefaultLayout from \"../../components/layouts/DefaultLayout\";\n/* components */\n\nimport BlogPost from '../../components/modules/BlogPost';\nimport Navbar from '../../components/NavBar/NavBar';\n\nfunction fetchUrl(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nvar Page = function Page(_ref) {\n  var data = _ref.data;\n  var content = data.content;\n  var blogpostData = content.components.find(function (item) {\n    return item.component === 'Blogpost Module';\n  });\n  console.log(blogpostData);\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), blogpostData.map(function (post) {\n    return __jsx(BlogPost, {\n      title: post.Title,\n      intro: post.Intro,\n      link: post.Body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }), blogpostData ? __jsx(BlogPost, {\n    title: blogpostData.Title,\n    intro: blogpostData.Intro,\n    body: blogpostData.Body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : null);\n};\n\nPage.getInitialProps = function _callee(_ref2) {\n  var query, page, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          page = query.page;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetchUrl(\"http://localhost:3000/api/page/\".concat(page)));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["D:/Code/NextJS/react-storyblok-next-boilerplate-master/pages/root/[page].js"],"names":["fetch","DefaultLayout","BlogPost","Navbar","fetchUrl","url","then","r","json","Page","data","content","blogpostData","components","find","item","component","console","log","map","post","Title","Intro","Body","getInitialProps","query","page"],"mappings":";;;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA;;AAEA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAGD,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAAA,MACjBC,OADiB,GACLD,IADK,CACjBC,OADiB;AAEzB,MAAMC,YAAY,GAAGD,OAAO,CAACE,UAAR,CAAmBC,IAAnB,CAAwB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,SAAL,KAAmB,iBAA7B;AAAA,GAAxB,CAArB;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAIC,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGA,YAAY,CAACO,GAAb,CAAiB,UAAAC,IAAI,EAAI;AACpB,WAAQ,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,IAAI,CAACC,KAAtB;AAA6B,MAAA,KAAK,EAAED,IAAI,CAACE,KAAzC;AAAgD,MAAA,IAAI,EAAEF,IAAI,CAACG,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACC,GAFN,CAFH,EAKGX,YAAY,GAAE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,YAAY,CAACS,KAA9B;AAAqC,IAAA,KAAK,EAAET,YAAY,CAACU,KAAzD;AAAgE,IAAA,IAAI,EAAEV,YAAY,CAACW,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,GAAgG,IAL/G,CADF;AAUD,CAjBD;;AAoBAd,IAAI,CAACe,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AACbC,UAAAA,IADa,GACJD,KADI,CACbC,IADa;AAAA;AAAA,2CAEFtB,QAAQ,0CAAmCsB,IAAnC,EAFN;;AAAA;AAEfhB,UAAAA,IAFe;AAAA,2CAGd;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAMA,eAAeD,IAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n\n/* layout */\nimport DefaultLayout from \"../../components/layouts/DefaultLayout\";\n\n/* components */\n\nimport BlogPost from '../../components/modules/BlogPost';\nimport Navbar from '../../components/NavBar/NavBar';\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n\nconst Page = ({ data }) => {\n  const { content } = data;\n  const blogpostData = content.components.find((item) => item.component === 'Blogpost Module');\n\tconsole.log(blogpostData);\n\n\n\n  return (\n    <DefaultLayout>\n      <Navbar/>\n      {blogpostData.map(post => {\n            return  <BlogPost title={post.Title} intro={post.Intro} link={post.Body} /> \n            })}\n      {blogpostData? <BlogPost title={blogpostData.Title} intro={blogpostData.Intro} body={blogpostData.Body} /> : null}\n      \n    </DefaultLayout>\n  );\n};\n\n\nPage.getInitialProps = async ({ query }) => {\n  const { page } = query;\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  return { data }; \n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}